//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebService.com.softexpert.tecfy.adm {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdministrationBinding", Namespace="urn:admin")]
    public partial class Administration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback newUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback editUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback editUserDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback editPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback newPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback importUserV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback addAttribProfileValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAttribValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCompContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDepartmentPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMeasUnityOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePositionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback compAtribAssocOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCompContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMeasUnityOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserAccessGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserLeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback editDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttribDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback newDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback importUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback synchUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEmployeeProfileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Administration() {
            this.Url = global::WebService.Properties.Settings.Default.WebService_com_softexpert_tecfy_adm_Administration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event newUserCompletedEventHandler newUserCompleted;
        
        /// <remarks/>
        public event editUserCompletedEventHandler editUserCompleted;
        
        /// <remarks/>
        public event disableUserCompletedEventHandler disableUserCompleted;
        
        /// <remarks/>
        public event editUserDepartmentCompletedEventHandler editUserDepartmentCompleted;
        
        /// <remarks/>
        public event editPositionCompletedEventHandler editPositionCompleted;
        
        /// <remarks/>
        public event newPositionCompletedEventHandler newPositionCompleted;
        
        /// <remarks/>
        public event importUserV2CompletedEventHandler importUserV2Completed;
        
        /// <remarks/>
        public event addAttribProfileValueCompletedEventHandler addAttribProfileValueCompleted;
        
        /// <remarks/>
        public event addAttributeCompletedEventHandler addAttributeCompleted;
        
        /// <remarks/>
        public event addAttribValueCompletedEventHandler addAttribValueCompleted;
        
        /// <remarks/>
        public event addCompanyCompletedEventHandler addCompanyCompleted;
        
        /// <remarks/>
        public event addCompContactCompletedEventHandler addCompContactCompleted;
        
        /// <remarks/>
        public event addDepartmentPositionCompletedEventHandler addDepartmentPositionCompleted;
        
        /// <remarks/>
        public event addMeasUnityCompletedEventHandler addMeasUnityCompleted;
        
        /// <remarks/>
        public event addUserDepartmentCompletedEventHandler addUserDepartmentCompleted;
        
        /// <remarks/>
        public event changePositionStatusCompletedEventHandler changePositionStatusCompleted;
        
        /// <remarks/>
        public event compAtribAssocCompletedEventHandler compAtribAssocCompleted;
        
        /// <remarks/>
        public event deleteCompanyCompletedEventHandler deleteCompanyCompleted;
        
        /// <remarks/>
        public event deleteCompContactCompletedEventHandler deleteCompContactCompleted;
        
        /// <remarks/>
        public event deleteDepartmentCompletedEventHandler deleteDepartmentCompleted;
        
        /// <remarks/>
        public event deleteMeasUnityCompletedEventHandler deleteMeasUnityCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event deleteUserDepartmentCompletedEventHandler deleteUserDepartmentCompleted;
        
        /// <remarks/>
        public event deleteUserAccessGroupCompletedEventHandler deleteUserAccessGroupCompleted;
        
        /// <remarks/>
        public event deleteUserLeaderCompletedEventHandler deleteUserLeaderCompleted;
        
        /// <remarks/>
        public event editDepartmentCompletedEventHandler editDepartmentCompleted;
        
        /// <remarks/>
        public event getAttribDataCompletedEventHandler getAttribDataCompleted;
        
        /// <remarks/>
        public event newDepartmentCompletedEventHandler newDepartmentCompleted;
        
        /// <remarks/>
        public event importUserCompletedEventHandler importUserCompleted;
        
        /// <remarks/>
        public event synchUserCompletedEventHandler synchUserCompleted;
        
        /// <remarks/>
        public event updateEmployeeProfileCompletedEventHandler updateEmployeeProfileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#newUser", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int newUser(string IDUSER, string NAME, string LOGIN, string PASS, string EMAIL, string IDAREA, string IDFUNC, string IDACCGROUP, string CDLEADER, out string Status, out string Detail, out int Code, out string RecordKey, out string RecordId) {
            object[] results = this.Invoke("newUser", new object[] {
                        IDUSER,
                        NAME,
                        LOGIN,
                        PASS,
                        EMAIL,
                        IDAREA,
                        IDFUNC,
                        IDACCGROUP,
                        CDLEADER});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            RecordKey = ((string)(results[4]));
            RecordId = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void newUserAsync(string IDUSER, string NAME, string LOGIN, string PASS, string EMAIL, string IDAREA, string IDFUNC, string IDACCGROUP, string CDLEADER) {
            this.newUserAsync(IDUSER, NAME, LOGIN, PASS, EMAIL, IDAREA, IDFUNC, IDACCGROUP, CDLEADER, null);
        }
        
        /// <remarks/>
        public void newUserAsync(string IDUSER, string NAME, string LOGIN, string PASS, string EMAIL, string IDAREA, string IDFUNC, string IDACCGROUP, string CDLEADER, object userState) {
            if ((this.newUserOperationCompleted == null)) {
                this.newUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewUserOperationCompleted);
            }
            this.InvokeAsync("newUser", new object[] {
                        IDUSER,
                        NAME,
                        LOGIN,
                        PASS,
                        EMAIL,
                        IDAREA,
                        IDFUNC,
                        IDACCGROUP,
                        CDLEADER}, this.newUserOperationCompleted, userState);
        }
        
        private void OnnewUserOperationCompleted(object arg) {
            if ((this.newUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newUserCompleted(this, new newUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#editUser", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editUser(string ID, string NAME, string LOGIN, string PASS, string EMAIL, string CDLEADER, out string Status, out string Detail, out int Code, out string RecordId, out string RecordKey) {
            object[] results = this.Invoke("editUser", new object[] {
                        ID,
                        NAME,
                        LOGIN,
                        PASS,
                        EMAIL,
                        CDLEADER});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            RecordId = ((string)(results[4]));
            RecordKey = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editUserAsync(string ID, string NAME, string LOGIN, string PASS, string EMAIL, string CDLEADER) {
            this.editUserAsync(ID, NAME, LOGIN, PASS, EMAIL, CDLEADER, null);
        }
        
        /// <remarks/>
        public void editUserAsync(string ID, string NAME, string LOGIN, string PASS, string EMAIL, string CDLEADER, object userState) {
            if ((this.editUserOperationCompleted == null)) {
                this.editUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditUserOperationCompleted);
            }
            this.InvokeAsync("editUser", new object[] {
                        ID,
                        NAME,
                        LOGIN,
                        PASS,
                        EMAIL,
                        CDLEADER}, this.editUserOperationCompleted, userState);
        }
        
        private void OneditUserOperationCompleted(object arg) {
            if ((this.editUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editUserCompleted(this, new editUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#disableUser", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int disableUser([System.Xml.Serialization.XmlArrayItemAttribute("codes", IsNullable=false)] string[] cd, out string Status, out string Detail, out int Code) {
            object[] results = this.Invoke("disableUser", new object[] {
                        cd});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void disableUserAsync(string[] cd) {
            this.disableUserAsync(cd, null);
        }
        
        /// <remarks/>
        public void disableUserAsync(string[] cd, object userState) {
            if ((this.disableUserOperationCompleted == null)) {
                this.disableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableUserOperationCompleted);
            }
            this.InvokeAsync("disableUser", new object[] {
                        cd}, this.disableUserOperationCompleted, userState);
        }
        
        private void OndisableUserOperationCompleted(object arg) {
            if ((this.disableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableUserCompleted(this, new disableUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#editUserDepartment", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editUserDepartment(string ID, string IDAREA, string IDFUNC, out string Status, out string Detail, out int Code, out string RecordId, out string RecordKey) {
            object[] results = this.Invoke("editUserDepartment", new object[] {
                        ID,
                        IDAREA,
                        IDFUNC});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            RecordId = ((string)(results[4]));
            RecordKey = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editUserDepartmentAsync(string ID, string IDAREA, string IDFUNC) {
            this.editUserDepartmentAsync(ID, IDAREA, IDFUNC, null);
        }
        
        /// <remarks/>
        public void editUserDepartmentAsync(string ID, string IDAREA, string IDFUNC, object userState) {
            if ((this.editUserDepartmentOperationCompleted == null)) {
                this.editUserDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditUserDepartmentOperationCompleted);
            }
            this.InvokeAsync("editUserDepartment", new object[] {
                        ID,
                        IDAREA,
                        IDFUNC}, this.editUserDepartmentOperationCompleted, userState);
        }
        
        private void OneditUserDepartmentOperationCompleted(object arg) {
            if ((this.editUserDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editUserDepartmentCompleted(this, new editUserDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#editPosition", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editPosition(string ID, string DESC, out string Status, out string Detail, out int Code) {
            object[] results = this.Invoke("editPosition", new object[] {
                        ID,
                        DESC});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editPositionAsync(string ID, string DESC) {
            this.editPositionAsync(ID, DESC, null);
        }
        
        /// <remarks/>
        public void editPositionAsync(string ID, string DESC, object userState) {
            if ((this.editPositionOperationCompleted == null)) {
                this.editPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditPositionOperationCompleted);
            }
            this.InvokeAsync("editPosition", new object[] {
                        ID,
                        DESC}, this.editPositionOperationCompleted, userState);
        }
        
        private void OneditPositionOperationCompleted(object arg) {
            if ((this.editPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editPositionCompleted(this, new editPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#newPosition", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int newPosition(string ID, string DESC, out string Status, out string Detail, out int Code, out string RecordId, out string RecordKey) {
            object[] results = this.Invoke("newPosition", new object[] {
                        ID,
                        DESC});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            Code = ((int)(results[3]));
            RecordId = ((string)(results[4]));
            RecordKey = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void newPositionAsync(string ID, string DESC) {
            this.newPositionAsync(ID, DESC, null);
        }
        
        /// <remarks/>
        public void newPositionAsync(string ID, string DESC, object userState) {
            if ((this.newPositionOperationCompleted == null)) {
                this.newPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewPositionOperationCompleted);
            }
            this.InvokeAsync("newPosition", new object[] {
                        ID,
                        DESC}, this.newPositionOperationCompleted, userState);
        }
        
        private void OnnewPositionOperationCompleted(object arg) {
            if ((this.newPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newPositionCompleted(this, new newPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#importUserV2", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserId")]
        public int importUserV2(
                    string UserId, 
                    string UserName, 
                    string UserLogin, 
                    string UserPassword, 
                    string UserCounterSign, 
                    string UserLanguage, 
                    string IsActive, 
                    string IsEnabled, 
                    string NumMaxConnections, 
                    string UserPhone, 
                    string UserEmail, 
                    string LeaderId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] UserPhoto, 
                    string UserDomainId, 
                    string DomainId, 
                    string AccGroupIdArray, 
                    string DeptPosString, 
                    string TeamIdArray, 
                    int UpdateType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool UpdateTypeSpecified, 
                    out string Status, 
                    out string Detail) {
            object[] results = this.Invoke("importUserV2", new object[] {
                        UserId,
                        UserName,
                        UserLogin,
                        UserPassword,
                        UserCounterSign,
                        UserLanguage,
                        IsActive,
                        IsEnabled,
                        NumMaxConnections,
                        UserPhone,
                        UserEmail,
                        LeaderId,
                        UserPhoto,
                        UserDomainId,
                        DomainId,
                        AccGroupIdArray,
                        DeptPosString,
                        TeamIdArray,
                        UpdateType,
                        UpdateTypeSpecified});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void importUserV2Async(
                    string UserId, 
                    string UserName, 
                    string UserLogin, 
                    string UserPassword, 
                    string UserCounterSign, 
                    string UserLanguage, 
                    string IsActive, 
                    string IsEnabled, 
                    string NumMaxConnections, 
                    string UserPhone, 
                    string UserEmail, 
                    string LeaderId, 
                    byte[] UserPhoto, 
                    string UserDomainId, 
                    string DomainId, 
                    string AccGroupIdArray, 
                    string DeptPosString, 
                    string TeamIdArray, 
                    int UpdateType, 
                    bool UpdateTypeSpecified) {
            this.importUserV2Async(UserId, UserName, UserLogin, UserPassword, UserCounterSign, UserLanguage, IsActive, IsEnabled, NumMaxConnections, UserPhone, UserEmail, LeaderId, UserPhoto, UserDomainId, DomainId, AccGroupIdArray, DeptPosString, TeamIdArray, UpdateType, UpdateTypeSpecified, null);
        }
        
        /// <remarks/>
        public void importUserV2Async(
                    string UserId, 
                    string UserName, 
                    string UserLogin, 
                    string UserPassword, 
                    string UserCounterSign, 
                    string UserLanguage, 
                    string IsActive, 
                    string IsEnabled, 
                    string NumMaxConnections, 
                    string UserPhone, 
                    string UserEmail, 
                    string LeaderId, 
                    byte[] UserPhoto, 
                    string UserDomainId, 
                    string DomainId, 
                    string AccGroupIdArray, 
                    string DeptPosString, 
                    string TeamIdArray, 
                    int UpdateType, 
                    bool UpdateTypeSpecified, 
                    object userState) {
            if ((this.importUserV2OperationCompleted == null)) {
                this.importUserV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportUserV2OperationCompleted);
            }
            this.InvokeAsync("importUserV2", new object[] {
                        UserId,
                        UserName,
                        UserLogin,
                        UserPassword,
                        UserCounterSign,
                        UserLanguage,
                        IsActive,
                        IsEnabled,
                        NumMaxConnections,
                        UserPhone,
                        UserEmail,
                        LeaderId,
                        UserPhoto,
                        UserDomainId,
                        DomainId,
                        AccGroupIdArray,
                        DeptPosString,
                        TeamIdArray,
                        UpdateType,
                        UpdateTypeSpecified}, this.importUserV2OperationCompleted, userState);
        }
        
        private void OnimportUserV2OperationCompleted(object arg) {
            if ((this.importUserV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importUserV2Completed(this, new importUserV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addAttribProfileValue", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addAttribProfileValue(string IDUSER, string NMATTRIBUTE, string VLATTRIBUTE, string DSATTRIBUTE) {
            object[] results = this.Invoke("addAttribProfileValue", new object[] {
                        IDUSER,
                        NMATTRIBUTE,
                        VLATTRIBUTE,
                        DSATTRIBUTE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAttribProfileValueAsync(string IDUSER, string NMATTRIBUTE, string VLATTRIBUTE, string DSATTRIBUTE) {
            this.addAttribProfileValueAsync(IDUSER, NMATTRIBUTE, VLATTRIBUTE, DSATTRIBUTE, null);
        }
        
        /// <remarks/>
        public void addAttribProfileValueAsync(string IDUSER, string NMATTRIBUTE, string VLATTRIBUTE, string DSATTRIBUTE, object userState) {
            if ((this.addAttribProfileValueOperationCompleted == null)) {
                this.addAttribProfileValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAttribProfileValueOperationCompleted);
            }
            this.InvokeAsync("addAttribProfileValue", new object[] {
                        IDUSER,
                        NMATTRIBUTE,
                        VLATTRIBUTE,
                        DSATTRIBUTE}, this.addAttribProfileValueOperationCompleted, userState);
        }
        
        private void OnaddAttribProfileValueOperationCompleted(object arg) {
            if ((this.addAttribProfileValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAttribProfileValueCompleted(this, new addAttribProfileValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addAttribute", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addAttribute(string IDATTRIBUTE, string NMATTRIBUTE, string IDUSER, string FGATTRIBUTETYPE, string FGDATATYPE, string FGSELECTIONTYPE, string FGMULTIVALUED, string CDISOSYSTEM, string FGMASKTYPE, string DSMASK) {
            object[] results = this.Invoke("addAttribute", new object[] {
                        IDATTRIBUTE,
                        NMATTRIBUTE,
                        IDUSER,
                        FGATTRIBUTETYPE,
                        FGDATATYPE,
                        FGSELECTIONTYPE,
                        FGMULTIVALUED,
                        CDISOSYSTEM,
                        FGMASKTYPE,
                        DSMASK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAttributeAsync(string IDATTRIBUTE, string NMATTRIBUTE, string IDUSER, string FGATTRIBUTETYPE, string FGDATATYPE, string FGSELECTIONTYPE, string FGMULTIVALUED, string CDISOSYSTEM, string FGMASKTYPE, string DSMASK) {
            this.addAttributeAsync(IDATTRIBUTE, NMATTRIBUTE, IDUSER, FGATTRIBUTETYPE, FGDATATYPE, FGSELECTIONTYPE, FGMULTIVALUED, CDISOSYSTEM, FGMASKTYPE, DSMASK, null);
        }
        
        /// <remarks/>
        public void addAttributeAsync(string IDATTRIBUTE, string NMATTRIBUTE, string IDUSER, string FGATTRIBUTETYPE, string FGDATATYPE, string FGSELECTIONTYPE, string FGMULTIVALUED, string CDISOSYSTEM, string FGMASKTYPE, string DSMASK, object userState) {
            if ((this.addAttributeOperationCompleted == null)) {
                this.addAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAttributeOperationCompleted);
            }
            this.InvokeAsync("addAttribute", new object[] {
                        IDATTRIBUTE,
                        NMATTRIBUTE,
                        IDUSER,
                        FGATTRIBUTETYPE,
                        FGDATATYPE,
                        FGSELECTIONTYPE,
                        FGMULTIVALUED,
                        CDISOSYSTEM,
                        FGMASKTYPE,
                        DSMASK}, this.addAttributeOperationCompleted, userState);
        }
        
        private void OnaddAttributeOperationCompleted(object arg) {
            if ((this.addAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAttributeCompleted(this, new addAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addAttribValue", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addAttribValue(string IDATTRIBUTE, string VLATTRIBUTE, string FGDEFAULTVALUE, string IDUSER, string IDDATASOURCE, string DSCONNDBSQL, string NMFILTERFIELD) {
            object[] results = this.Invoke("addAttribValue", new object[] {
                        IDATTRIBUTE,
                        VLATTRIBUTE,
                        FGDEFAULTVALUE,
                        IDUSER,
                        IDDATASOURCE,
                        DSCONNDBSQL,
                        NMFILTERFIELD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAttribValueAsync(string IDATTRIBUTE, string VLATTRIBUTE, string FGDEFAULTVALUE, string IDUSER, string IDDATASOURCE, string DSCONNDBSQL, string NMFILTERFIELD) {
            this.addAttribValueAsync(IDATTRIBUTE, VLATTRIBUTE, FGDEFAULTVALUE, IDUSER, IDDATASOURCE, DSCONNDBSQL, NMFILTERFIELD, null);
        }
        
        /// <remarks/>
        public void addAttribValueAsync(string IDATTRIBUTE, string VLATTRIBUTE, string FGDEFAULTVALUE, string IDUSER, string IDDATASOURCE, string DSCONNDBSQL, string NMFILTERFIELD, object userState) {
            if ((this.addAttribValueOperationCompleted == null)) {
                this.addAttribValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAttribValueOperationCompleted);
            }
            this.InvokeAsync("addAttribValue", new object[] {
                        IDATTRIBUTE,
                        VLATTRIBUTE,
                        FGDEFAULTVALUE,
                        IDUSER,
                        IDDATASOURCE,
                        DSCONNDBSQL,
                        NMFILTERFIELD}, this.addAttribValueOperationCompleted, userState);
        }
        
        private void OnaddAttribValueOperationCompleted(object arg) {
            if ((this.addAttribValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAttribValueCompleted(this, new addAttribValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addCompany", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addCompany(
                    string IDCOMMERCIAL, 
                    string NMCOMPANY, 
                    string DSADDRESS, 
                    string NMCITY, 
                    string IDSTATE, 
                    string NMCOUNTRY, 
                    string IDZIPCODE, 
                    string IDPHONE, 
                    string IDFAX, 
                    string NMHOMEPAGE, 
                    string FGCUSTOMER, 
                    string FGSUPPLIER, 
                    string FGMANUFACTURER, 
                    string DSCOMPANY, 
                    string IDCOMPANY, 
                    string IDCOMPANYTYPE, 
                    string CDISOSYSTEM) {
            object[] results = this.Invoke("addCompany", new object[] {
                        IDCOMMERCIAL,
                        NMCOMPANY,
                        DSADDRESS,
                        NMCITY,
                        IDSTATE,
                        NMCOUNTRY,
                        IDZIPCODE,
                        IDPHONE,
                        IDFAX,
                        NMHOMEPAGE,
                        FGCUSTOMER,
                        FGSUPPLIER,
                        FGMANUFACTURER,
                        DSCOMPANY,
                        IDCOMPANY,
                        IDCOMPANYTYPE,
                        CDISOSYSTEM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCompanyAsync(
                    string IDCOMMERCIAL, 
                    string NMCOMPANY, 
                    string DSADDRESS, 
                    string NMCITY, 
                    string IDSTATE, 
                    string NMCOUNTRY, 
                    string IDZIPCODE, 
                    string IDPHONE, 
                    string IDFAX, 
                    string NMHOMEPAGE, 
                    string FGCUSTOMER, 
                    string FGSUPPLIER, 
                    string FGMANUFACTURER, 
                    string DSCOMPANY, 
                    string IDCOMPANY, 
                    string IDCOMPANYTYPE, 
                    string CDISOSYSTEM) {
            this.addCompanyAsync(IDCOMMERCIAL, NMCOMPANY, DSADDRESS, NMCITY, IDSTATE, NMCOUNTRY, IDZIPCODE, IDPHONE, IDFAX, NMHOMEPAGE, FGCUSTOMER, FGSUPPLIER, FGMANUFACTURER, DSCOMPANY, IDCOMPANY, IDCOMPANYTYPE, CDISOSYSTEM, null);
        }
        
        /// <remarks/>
        public void addCompanyAsync(
                    string IDCOMMERCIAL, 
                    string NMCOMPANY, 
                    string DSADDRESS, 
                    string NMCITY, 
                    string IDSTATE, 
                    string NMCOUNTRY, 
                    string IDZIPCODE, 
                    string IDPHONE, 
                    string IDFAX, 
                    string NMHOMEPAGE, 
                    string FGCUSTOMER, 
                    string FGSUPPLIER, 
                    string FGMANUFACTURER, 
                    string DSCOMPANY, 
                    string IDCOMPANY, 
                    string IDCOMPANYTYPE, 
                    string CDISOSYSTEM, 
                    object userState) {
            if ((this.addCompanyOperationCompleted == null)) {
                this.addCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCompanyOperationCompleted);
            }
            this.InvokeAsync("addCompany", new object[] {
                        IDCOMMERCIAL,
                        NMCOMPANY,
                        DSADDRESS,
                        NMCITY,
                        IDSTATE,
                        NMCOUNTRY,
                        IDZIPCODE,
                        IDPHONE,
                        IDFAX,
                        NMHOMEPAGE,
                        FGCUSTOMER,
                        FGSUPPLIER,
                        FGMANUFACTURER,
                        DSCOMPANY,
                        IDCOMPANY,
                        IDCOMPANYTYPE,
                        CDISOSYSTEM}, this.addCompanyOperationCompleted, userState);
        }
        
        private void OnaddCompanyOperationCompleted(object arg) {
            if ((this.addCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCompanyCompleted(this, new addCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addCompContact", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addCompContact(string IDCOMMERCIAL, string NMCONTACT, string NMDEPARTMENT, string NMPOSITION, string IDPHONE, string IDFAX, string NMEMAIL, string DSCONTACT, string FGDEFAULT) {
            object[] results = this.Invoke("addCompContact", new object[] {
                        IDCOMMERCIAL,
                        NMCONTACT,
                        NMDEPARTMENT,
                        NMPOSITION,
                        IDPHONE,
                        IDFAX,
                        NMEMAIL,
                        DSCONTACT,
                        FGDEFAULT});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCompContactAsync(string IDCOMMERCIAL, string NMCONTACT, string NMDEPARTMENT, string NMPOSITION, string IDPHONE, string IDFAX, string NMEMAIL, string DSCONTACT, string FGDEFAULT) {
            this.addCompContactAsync(IDCOMMERCIAL, NMCONTACT, NMDEPARTMENT, NMPOSITION, IDPHONE, IDFAX, NMEMAIL, DSCONTACT, FGDEFAULT, null);
        }
        
        /// <remarks/>
        public void addCompContactAsync(string IDCOMMERCIAL, string NMCONTACT, string NMDEPARTMENT, string NMPOSITION, string IDPHONE, string IDFAX, string NMEMAIL, string DSCONTACT, string FGDEFAULT, object userState) {
            if ((this.addCompContactOperationCompleted == null)) {
                this.addCompContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCompContactOperationCompleted);
            }
            this.InvokeAsync("addCompContact", new object[] {
                        IDCOMMERCIAL,
                        NMCONTACT,
                        NMDEPARTMENT,
                        NMPOSITION,
                        IDPHONE,
                        IDFAX,
                        NMEMAIL,
                        DSCONTACT,
                        FGDEFAULT}, this.addCompContactOperationCompleted, userState);
        }
        
        private void OnaddCompContactOperationCompleted(object arg) {
            if ((this.addCompContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCompContactCompleted(this, new addCompContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addDepartmentPosition", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public string addDepartmentPosition(string IDAREA, string IDFUNC, out long Code, out string Detail, out string RecordID) {
            object[] results = this.Invoke("addDepartmentPosition", new object[] {
                        IDAREA,
                        IDFUNC});
            Code = ((long)(results[1]));
            Detail = ((string)(results[2]));
            RecordID = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addDepartmentPositionAsync(string IDAREA, string IDFUNC) {
            this.addDepartmentPositionAsync(IDAREA, IDFUNC, null);
        }
        
        /// <remarks/>
        public void addDepartmentPositionAsync(string IDAREA, string IDFUNC, object userState) {
            if ((this.addDepartmentPositionOperationCompleted == null)) {
                this.addDepartmentPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDepartmentPositionOperationCompleted);
            }
            this.InvokeAsync("addDepartmentPosition", new object[] {
                        IDAREA,
                        IDFUNC}, this.addDepartmentPositionOperationCompleted, userState);
        }
        
        private void OnaddDepartmentPositionOperationCompleted(object arg) {
            if ((this.addDepartmentPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDepartmentPositionCompleted(this, new addDepartmentPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addMeasUnity", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string addMeasUnity(string IDMEASUNITY, string NMMEASUNITY, string CDISOSYSTEM) {
            object[] results = this.Invoke("addMeasUnity", new object[] {
                        IDMEASUNITY,
                        NMMEASUNITY,
                        CDISOSYSTEM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addMeasUnityAsync(string IDMEASUNITY, string NMMEASUNITY, string CDISOSYSTEM) {
            this.addMeasUnityAsync(IDMEASUNITY, NMMEASUNITY, CDISOSYSTEM, null);
        }
        
        /// <remarks/>
        public void addMeasUnityAsync(string IDMEASUNITY, string NMMEASUNITY, string CDISOSYSTEM, object userState) {
            if ((this.addMeasUnityOperationCompleted == null)) {
                this.addMeasUnityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMeasUnityOperationCompleted);
            }
            this.InvokeAsync("addMeasUnity", new object[] {
                        IDMEASUNITY,
                        NMMEASUNITY,
                        CDISOSYSTEM}, this.addMeasUnityOperationCompleted, userState);
        }
        
        private void OnaddMeasUnityOperationCompleted(object arg) {
            if ((this.addMeasUnityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMeasUnityCompleted(this, new addMeasUnityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#addUserDepartment", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int addUserDepartment(string ID, string IDAREA, string IDFUNC) {
            object[] results = this.Invoke("addUserDepartment", new object[] {
                        ID,
                        IDAREA,
                        IDFUNC});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addUserDepartmentAsync(string ID, string IDAREA, string IDFUNC) {
            this.addUserDepartmentAsync(ID, IDAREA, IDFUNC, null);
        }
        
        /// <remarks/>
        public void addUserDepartmentAsync(string ID, string IDAREA, string IDFUNC, object userState) {
            if ((this.addUserDepartmentOperationCompleted == null)) {
                this.addUserDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserDepartmentOperationCompleted);
            }
            this.InvokeAsync("addUserDepartment", new object[] {
                        ID,
                        IDAREA,
                        IDFUNC}, this.addUserDepartmentOperationCompleted, userState);
        }
        
        private void OnaddUserDepartmentOperationCompleted(object arg) {
            if ((this.addUserDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserDepartmentCompleted(this, new addUserDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#changePositionStatus", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int changePositionStatus(string ID) {
            object[] results = this.Invoke("changePositionStatus", new object[] {
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void changePositionStatusAsync(string ID) {
            this.changePositionStatusAsync(ID, null);
        }
        
        /// <remarks/>
        public void changePositionStatusAsync(string ID, object userState) {
            if ((this.changePositionStatusOperationCompleted == null)) {
                this.changePositionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePositionStatusOperationCompleted);
            }
            this.InvokeAsync("changePositionStatus", new object[] {
                        ID}, this.changePositionStatusOperationCompleted, userState);
        }
        
        private void OnchangePositionStatusOperationCompleted(object arg) {
            if ((this.changePositionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePositionStatusCompleted(this, new changePositionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#compAtribAssoc", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string compAtribAssoc(string IDCOMMERCIAL, string IDATTRIBUTE, string VLATTRIBUTE) {
            object[] results = this.Invoke("compAtribAssoc", new object[] {
                        IDCOMMERCIAL,
                        IDATTRIBUTE,
                        VLATTRIBUTE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void compAtribAssocAsync(string IDCOMMERCIAL, string IDATTRIBUTE, string VLATTRIBUTE) {
            this.compAtribAssocAsync(IDCOMMERCIAL, IDATTRIBUTE, VLATTRIBUTE, null);
        }
        
        /// <remarks/>
        public void compAtribAssocAsync(string IDCOMMERCIAL, string IDATTRIBUTE, string VLATTRIBUTE, object userState) {
            if ((this.compAtribAssocOperationCompleted == null)) {
                this.compAtribAssocOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompAtribAssocOperationCompleted);
            }
            this.InvokeAsync("compAtribAssoc", new object[] {
                        IDCOMMERCIAL,
                        IDATTRIBUTE,
                        VLATTRIBUTE}, this.compAtribAssocOperationCompleted, userState);
        }
        
        private void OncompAtribAssocOperationCompleted(object arg) {
            if ((this.compAtribAssocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.compAtribAssocCompleted(this, new compAtribAssocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteCompany", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string deleteCompany(string IDCOMMERCIAL, string NMCOMPANY) {
            object[] results = this.Invoke("deleteCompany", new object[] {
                        IDCOMMERCIAL,
                        NMCOMPANY});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCompanyAsync(string IDCOMMERCIAL, string NMCOMPANY) {
            this.deleteCompanyAsync(IDCOMMERCIAL, NMCOMPANY, null);
        }
        
        /// <remarks/>
        public void deleteCompanyAsync(string IDCOMMERCIAL, string NMCOMPANY, object userState) {
            if ((this.deleteCompanyOperationCompleted == null)) {
                this.deleteCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCompanyOperationCompleted);
            }
            this.InvokeAsync("deleteCompany", new object[] {
                        IDCOMMERCIAL,
                        NMCOMPANY}, this.deleteCompanyOperationCompleted, userState);
        }
        
        private void OndeleteCompanyOperationCompleted(object arg) {
            if ((this.deleteCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompanyCompleted(this, new deleteCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteCompContact", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string deleteCompContact(string IDCOMMERCIAL, string NMCONTACT) {
            object[] results = this.Invoke("deleteCompContact", new object[] {
                        IDCOMMERCIAL,
                        NMCONTACT});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCompContactAsync(string IDCOMMERCIAL, string NMCONTACT) {
            this.deleteCompContactAsync(IDCOMMERCIAL, NMCONTACT, null);
        }
        
        /// <remarks/>
        public void deleteCompContactAsync(string IDCOMMERCIAL, string NMCONTACT, object userState) {
            if ((this.deleteCompContactOperationCompleted == null)) {
                this.deleteCompContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCompContactOperationCompleted);
            }
            this.InvokeAsync("deleteCompContact", new object[] {
                        IDCOMMERCIAL,
                        NMCONTACT}, this.deleteCompContactOperationCompleted, userState);
        }
        
        private void OndeleteCompContactOperationCompleted(object arg) {
            if ((this.deleteCompContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompContactCompleted(this, new deleteCompContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteDepartment", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int deleteDepartment(string ID) {
            object[] results = this.Invoke("deleteDepartment", new object[] {
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDepartmentAsync(string ID) {
            this.deleteDepartmentAsync(ID, null);
        }
        
        /// <remarks/>
        public void deleteDepartmentAsync(string ID, object userState) {
            if ((this.deleteDepartmentOperationCompleted == null)) {
                this.deleteDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDepartmentOperationCompleted);
            }
            this.InvokeAsync("deleteDepartment", new object[] {
                        ID}, this.deleteDepartmentOperationCompleted, userState);
        }
        
        private void OndeleteDepartmentOperationCompleted(object arg) {
            if ((this.deleteDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDepartmentCompleted(this, new deleteDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteMeasUnity", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string deleteMeasUnity(string idmeasunity) {
            object[] results = this.Invoke("deleteMeasUnity", new object[] {
                        idmeasunity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMeasUnityAsync(string idmeasunity) {
            this.deleteMeasUnityAsync(idmeasunity, null);
        }
        
        /// <remarks/>
        public void deleteMeasUnityAsync(string idmeasunity, object userState) {
            if ((this.deleteMeasUnityOperationCompleted == null)) {
                this.deleteMeasUnityOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMeasUnityOperationCompleted);
            }
            this.InvokeAsync("deleteMeasUnity", new object[] {
                        idmeasunity}, this.deleteMeasUnityOperationCompleted, userState);
        }
        
        private void OndeleteMeasUnityOperationCompleted(object arg) {
            if ((this.deleteMeasUnityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMeasUnityCompleted(this, new deleteMeasUnityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteUser", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int deleteUser(string ID) {
            object[] results = this.Invoke("deleteUser", new object[] {
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAsync(string ID) {
            this.deleteUserAsync(ID, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string ID, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        ID}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteUserDepartment", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int deleteUserDepartment(string ID, string IDAREA, string IDFUNC) {
            object[] results = this.Invoke("deleteUserDepartment", new object[] {
                        ID,
                        IDAREA,
                        IDFUNC});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserDepartmentAsync(string ID, string IDAREA, string IDFUNC) {
            this.deleteUserDepartmentAsync(ID, IDAREA, IDFUNC, null);
        }
        
        /// <remarks/>
        public void deleteUserDepartmentAsync(string ID, string IDAREA, string IDFUNC, object userState) {
            if ((this.deleteUserDepartmentOperationCompleted == null)) {
                this.deleteUserDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserDepartmentOperationCompleted);
            }
            this.InvokeAsync("deleteUserDepartment", new object[] {
                        ID,
                        IDAREA,
                        IDFUNC}, this.deleteUserDepartmentOperationCompleted, userState);
        }
        
        private void OndeleteUserDepartmentOperationCompleted(object arg) {
            if ((this.deleteUserDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserDepartmentCompleted(this, new deleteUserDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteUserAccessGroup", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int deleteUserAccessGroup(string USERID, string IDACCGROUP, out string detail) {
            object[] results = this.Invoke("deleteUserAccessGroup", new object[] {
                        USERID,
                        IDACCGROUP});
            detail = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAccessGroupAsync(string USERID, string IDACCGROUP) {
            this.deleteUserAccessGroupAsync(USERID, IDACCGROUP, null);
        }
        
        /// <remarks/>
        public void deleteUserAccessGroupAsync(string USERID, string IDACCGROUP, object userState) {
            if ((this.deleteUserAccessGroupOperationCompleted == null)) {
                this.deleteUserAccessGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserAccessGroupOperationCompleted);
            }
            this.InvokeAsync("deleteUserAccessGroup", new object[] {
                        USERID,
                        IDACCGROUP}, this.deleteUserAccessGroupOperationCompleted, userState);
        }
        
        private void OndeleteUserAccessGroupOperationCompleted(object arg) {
            if ((this.deleteUserAccessGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserAccessGroupCompleted(this, new deleteUserAccessGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#deleteUserLeader", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int deleteUserLeader(string ID) {
            object[] results = this.Invoke("deleteUserLeader", new object[] {
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserLeaderAsync(string ID) {
            this.deleteUserLeaderAsync(ID, null);
        }
        
        /// <remarks/>
        public void deleteUserLeaderAsync(string ID, object userState) {
            if ((this.deleteUserLeaderOperationCompleted == null)) {
                this.deleteUserLeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserLeaderOperationCompleted);
            }
            this.InvokeAsync("deleteUserLeader", new object[] {
                        ID}, this.deleteUserLeaderOperationCompleted, userState);
        }
        
        private void OndeleteUserLeaderOperationCompleted(object arg) {
            if ((this.deleteUserLeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserLeaderCompleted(this, new deleteUserLeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#editDepartment", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int editDepartment(string ID, string DESC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDUPPER, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDCOMPANY, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FGDEPTTYPE) {
            object[] results = this.Invoke("editDepartment", new object[] {
                        ID,
                        DESC,
                        IDUPPER,
                        IDCOMPANY,
                        FGDEPTTYPE});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editDepartmentAsync(string ID, string DESC, string IDUPPER, string IDCOMPANY, string FGDEPTTYPE) {
            this.editDepartmentAsync(ID, DESC, IDUPPER, IDCOMPANY, FGDEPTTYPE, null);
        }
        
        /// <remarks/>
        public void editDepartmentAsync(string ID, string DESC, string IDUPPER, string IDCOMPANY, string FGDEPTTYPE, object userState) {
            if ((this.editDepartmentOperationCompleted == null)) {
                this.editDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditDepartmentOperationCompleted);
            }
            this.InvokeAsync("editDepartment", new object[] {
                        ID,
                        DESC,
                        IDUPPER,
                        IDCOMPANY,
                        FGDEPTTYPE}, this.editDepartmentOperationCompleted, userState);
        }
        
        private void OneditDepartmentOperationCompleted(object arg) {
            if ((this.editDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editDepartmentCompleted(this, new editDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#getAttribData", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getAttribData(string IDATTRIBS) {
            object[] results = this.Invoke("getAttribData", new object[] {
                        IDATTRIBS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttribDataAsync(string IDATTRIBS) {
            this.getAttribDataAsync(IDATTRIBS, null);
        }
        
        /// <remarks/>
        public void getAttribDataAsync(string IDATTRIBS, object userState) {
            if ((this.getAttribDataOperationCompleted == null)) {
                this.getAttribDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttribDataOperationCompleted);
            }
            this.InvokeAsync("getAttribData", new object[] {
                        IDATTRIBS}, this.getAttribDataOperationCompleted, userState);
        }
        
        private void OngetAttribDataOperationCompleted(object arg) {
            if ((this.getAttribDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttribDataCompleted(this, new getAttribDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#newDepartment", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int newDepartment(string ID, string DESC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDPOS, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDUPPER, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDCOMPANY, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string FGDEPTTYPE) {
            object[] results = this.Invoke("newDepartment", new object[] {
                        ID,
                        DESC,
                        IDPOS,
                        IDUPPER,
                        IDCOMPANY,
                        FGDEPTTYPE});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void newDepartmentAsync(string ID, string DESC, string IDPOS, string IDUPPER, string IDCOMPANY, string FGDEPTTYPE) {
            this.newDepartmentAsync(ID, DESC, IDPOS, IDUPPER, IDCOMPANY, FGDEPTTYPE, null);
        }
        
        /// <remarks/>
        public void newDepartmentAsync(string ID, string DESC, string IDPOS, string IDUPPER, string IDCOMPANY, string FGDEPTTYPE, object userState) {
            if ((this.newDepartmentOperationCompleted == null)) {
                this.newDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnewDepartmentOperationCompleted);
            }
            this.InvokeAsync("newDepartment", new object[] {
                        ID,
                        DESC,
                        IDPOS,
                        IDUPPER,
                        IDCOMPANY,
                        FGDEPTTYPE}, this.newDepartmentOperationCompleted, userState);
        }
        
        private void OnnewDepartmentOperationCompleted(object arg) {
            if ((this.newDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.newDepartmentCompleted(this, new newDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#importUser", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("UserId")]
        public int importUser(
                    string UserId, 
                    string UserName, 
                    string UserLogin, 
                    string UserPassword, 
                    string UserCounterSign, 
                    string UserLanguage, 
                    string IsActive, 
                    string IsEnabled, 
                    string NumMaxConnections, 
                    string UserPhone, 
                    string UserEmail, 
                    string LeaderId, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] UserPhoto, 
                    string UserDomainId, 
                    string DomainId, 
                    string AccGroupIdArray, 
                    string RolPosIdArray, 
                    string TeamIdArray, 
                    int UpdateType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool UpdateTypeSpecified, 
                    out string Status, 
                    out string Detail) {
            object[] results = this.Invoke("importUser", new object[] {
                        UserId,
                        UserName,
                        UserLogin,
                        UserPassword,
                        UserCounterSign,
                        UserLanguage,
                        IsActive,
                        IsEnabled,
                        NumMaxConnections,
                        UserPhone,
                        UserEmail,
                        LeaderId,
                        UserPhoto,
                        UserDomainId,
                        DomainId,
                        AccGroupIdArray,
                        RolPosIdArray,
                        TeamIdArray,
                        UpdateType,
                        UpdateTypeSpecified});
            Status = ((string)(results[1]));
            Detail = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void importUserAsync(
                    string UserId, 
                    string UserName, 
                    string UserLogin, 
                    string UserPassword, 
                    string UserCounterSign, 
                    string UserLanguage, 
                    string IsActive, 
                    string IsEnabled, 
                    string NumMaxConnections, 
                    string UserPhone, 
                    string UserEmail, 
                    string LeaderId, 
                    byte[] UserPhoto, 
                    string UserDomainId, 
                    string DomainId, 
                    string AccGroupIdArray, 
                    string RolPosIdArray, 
                    string TeamIdArray, 
                    int UpdateType, 
                    bool UpdateTypeSpecified) {
            this.importUserAsync(UserId, UserName, UserLogin, UserPassword, UserCounterSign, UserLanguage, IsActive, IsEnabled, NumMaxConnections, UserPhone, UserEmail, LeaderId, UserPhoto, UserDomainId, DomainId, AccGroupIdArray, RolPosIdArray, TeamIdArray, UpdateType, UpdateTypeSpecified, null);
        }
        
        /// <remarks/>
        public void importUserAsync(
                    string UserId, 
                    string UserName, 
                    string UserLogin, 
                    string UserPassword, 
                    string UserCounterSign, 
                    string UserLanguage, 
                    string IsActive, 
                    string IsEnabled, 
                    string NumMaxConnections, 
                    string UserPhone, 
                    string UserEmail, 
                    string LeaderId, 
                    byte[] UserPhoto, 
                    string UserDomainId, 
                    string DomainId, 
                    string AccGroupIdArray, 
                    string RolPosIdArray, 
                    string TeamIdArray, 
                    int UpdateType, 
                    bool UpdateTypeSpecified, 
                    object userState) {
            if ((this.importUserOperationCompleted == null)) {
                this.importUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportUserOperationCompleted);
            }
            this.InvokeAsync("importUser", new object[] {
                        UserId,
                        UserName,
                        UserLogin,
                        UserPassword,
                        UserCounterSign,
                        UserLanguage,
                        IsActive,
                        IsEnabled,
                        NumMaxConnections,
                        UserPhone,
                        UserEmail,
                        LeaderId,
                        UserPhoto,
                        UserDomainId,
                        DomainId,
                        AccGroupIdArray,
                        RolPosIdArray,
                        TeamIdArray,
                        UpdateType,
                        UpdateTypeSpecified}, this.importUserOperationCompleted, userState);
        }
        
        private void OnimportUserOperationCompleted(object arg) {
            if ((this.importUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importUserCompleted(this, new importUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#synchUser", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int synchUser(
                    string nmdomainuid, 
                    string id, 
                    string login, 
                    string name, 
                    string email, 
                    string fglanguage, 
                    string fguserenabled, 
                    string fguserblocked, 
                    string fgnotice, 
                    string idarea, 
                    string nmarea, 
                    string idfunc, 
                    string nmfunc, 
                    string nmdefsynchfilter, 
                    string oidconnection, 
                    string cdleader) {
            object[] results = this.Invoke("synchUser", new object[] {
                        nmdomainuid,
                        id,
                        login,
                        name,
                        email,
                        fglanguage,
                        fguserenabled,
                        fguserblocked,
                        fgnotice,
                        idarea,
                        nmarea,
                        idfunc,
                        nmfunc,
                        nmdefsynchfilter,
                        oidconnection,
                        cdleader});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void synchUserAsync(
                    string nmdomainuid, 
                    string id, 
                    string login, 
                    string name, 
                    string email, 
                    string fglanguage, 
                    string fguserenabled, 
                    string fguserblocked, 
                    string fgnotice, 
                    string idarea, 
                    string nmarea, 
                    string idfunc, 
                    string nmfunc, 
                    string nmdefsynchfilter, 
                    string oidconnection, 
                    string cdleader) {
            this.synchUserAsync(nmdomainuid, id, login, name, email, fglanguage, fguserenabled, fguserblocked, fgnotice, idarea, nmarea, idfunc, nmfunc, nmdefsynchfilter, oidconnection, cdleader, null);
        }
        
        /// <remarks/>
        public void synchUserAsync(
                    string nmdomainuid, 
                    string id, 
                    string login, 
                    string name, 
                    string email, 
                    string fglanguage, 
                    string fguserenabled, 
                    string fguserblocked, 
                    string fgnotice, 
                    string idarea, 
                    string nmarea, 
                    string idfunc, 
                    string nmfunc, 
                    string nmdefsynchfilter, 
                    string oidconnection, 
                    string cdleader, 
                    object userState) {
            if ((this.synchUserOperationCompleted == null)) {
                this.synchUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsynchUserOperationCompleted);
            }
            this.InvokeAsync("synchUser", new object[] {
                        nmdomainuid,
                        id,
                        login,
                        name,
                        email,
                        fglanguage,
                        fguserenabled,
                        fguserblocked,
                        fgnotice,
                        idarea,
                        nmarea,
                        idfunc,
                        nmfunc,
                        nmdefsynchfilter,
                        oidconnection,
                        cdleader}, this.synchUserOperationCompleted, userState);
        }
        
        private void OnsynchUserOperationCompleted(object arg) {
            if ((this.synchUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.synchUserCompleted(this, new synchUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:admin#updateEmployeeProfile", RequestNamespace="urn:admin", ResponseNamespace="urn:admin", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string updateEmployeeProfile(string IDUSER, string IDEDULEVEL, string FGEDULEVELSTATUS, string DTBIRTHDAY, string DTADMISSION, string DTDEMISSION, string DSADDRESS, string DSOBS) {
            object[] results = this.Invoke("updateEmployeeProfile", new object[] {
                        IDUSER,
                        IDEDULEVEL,
                        FGEDULEVELSTATUS,
                        DTBIRTHDAY,
                        DTADMISSION,
                        DTDEMISSION,
                        DSADDRESS,
                        DSOBS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateEmployeeProfileAsync(string IDUSER, string IDEDULEVEL, string FGEDULEVELSTATUS, string DTBIRTHDAY, string DTADMISSION, string DTDEMISSION, string DSADDRESS, string DSOBS) {
            this.updateEmployeeProfileAsync(IDUSER, IDEDULEVEL, FGEDULEVELSTATUS, DTBIRTHDAY, DTADMISSION, DTDEMISSION, DSADDRESS, DSOBS, null);
        }
        
        /// <remarks/>
        public void updateEmployeeProfileAsync(string IDUSER, string IDEDULEVEL, string FGEDULEVELSTATUS, string DTBIRTHDAY, string DTADMISSION, string DTDEMISSION, string DSADDRESS, string DSOBS, object userState) {
            if ((this.updateEmployeeProfileOperationCompleted == null)) {
                this.updateEmployeeProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmployeeProfileOperationCompleted);
            }
            this.InvokeAsync("updateEmployeeProfile", new object[] {
                        IDUSER,
                        IDEDULEVEL,
                        FGEDULEVELSTATUS,
                        DTBIRTHDAY,
                        DTADMISSION,
                        DTDEMISSION,
                        DSADDRESS,
                        DSOBS}, this.updateEmployeeProfileOperationCompleted, userState);
        }
        
        private void OnupdateEmployeeProfileOperationCompleted(object arg) {
            if ((this.updateEmployeeProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmployeeProfileCompleted(this, new updateEmployeeProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void newUserCompletedEventHandler(object sender, newUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RecordKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string RecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void editUserCompletedEventHandler(object sender, editUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string RecordKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void disableUserCompletedEventHandler(object sender, disableUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void editUserDepartmentCompletedEventHandler(object sender, editUserDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editUserDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editUserDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string RecordKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void editPositionCompletedEventHandler(object sender, editPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void newPositionCompletedEventHandler(object sender, newPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string RecordKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void importUserV2CompletedEventHandler(object sender, importUserV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importUserV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importUserV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addAttribProfileValueCompletedEventHandler(object sender, addAttribProfileValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAttribProfileValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAttribProfileValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addAttributeCompletedEventHandler(object sender, addAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addAttribValueCompletedEventHandler(object sender, addAttribValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAttribValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAttribValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addCompanyCompletedEventHandler(object sender, addCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addCompContactCompletedEventHandler(object sender, addCompContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCompContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCompContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addDepartmentPositionCompletedEventHandler(object sender, addDepartmentPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDepartmentPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDepartmentPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RecordID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addMeasUnityCompletedEventHandler(object sender, addMeasUnityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMeasUnityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMeasUnityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void addUserDepartmentCompletedEventHandler(object sender, addUserDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void changePositionStatusCompletedEventHandler(object sender, changePositionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePositionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePositionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void compAtribAssocCompletedEventHandler(object sender, compAtribAssocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class compAtribAssocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal compAtribAssocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteCompanyCompletedEventHandler(object sender, deleteCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteCompContactCompletedEventHandler(object sender, deleteCompContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteDepartmentCompletedEventHandler(object sender, deleteDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteMeasUnityCompletedEventHandler(object sender, deleteMeasUnityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMeasUnityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMeasUnityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteUserDepartmentCompletedEventHandler(object sender, deleteUserDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteUserAccessGroupCompletedEventHandler(object sender, deleteUserAccessGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserAccessGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserAccessGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteUserLeaderCompletedEventHandler(object sender, deleteUserLeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserLeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserLeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void editDepartmentCompletedEventHandler(object sender, editDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getAttribDataCompletedEventHandler(object sender, getAttribDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttribDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttribDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void newDepartmentCompletedEventHandler(object sender, newDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class newDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal newDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void importUserCompletedEventHandler(object sender, importUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void synchUserCompletedEventHandler(object sender, synchUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class synchUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal synchUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void updateEmployeeProfileCompletedEventHandler(object sender, updateEmployeeProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateEmployeeProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateEmployeeProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591